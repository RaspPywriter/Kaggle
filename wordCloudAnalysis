#This is a continution of the word cloud, now looking at more ways to analyze the data
# This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load in 

import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)

# Input data files are available in the "../input/" directory.
# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory

import os
print(os.listdir("../input"))
import matplotlib.pyplot as plt
from os import path
from PIL import Image
from wordcloud import WordCloud, STOPWORDS, ImageColorGenerator

# Any results you write to the current directory are saved as output.

# Now Load the data
data = pd.read_csv('../input/mbti_1.csv')

from collections import Counter 
import nltk
from nltk.corpus import stopwords
names = data['type'].unique()
t=0     
while t < len(names):
    for name in names:
        #combine the rows by type
        nameReturn = "".join(post for post in data[data["type"]== name].posts)
        nameReturn = nameReturn.lower()
        print('The top 10 words for the ' + name + ' personality are')
        split = nameReturn.split() 
        filtered_words = [word for word in split if word not in stopWords]
        counter = Counter(filtered_words)
        most_occur = counter.most_common(10) 
        print(name)
        df = pd.DataFrame(most_occur, columns = ['Word', 'Count'])
        df.plot.bar(x='Word',y='Count', title=name)
        print(most_occur)
        t+=1
        
        
# Create a graph to illustrate the count of top 10 most common words over all personality types
counter = Counter(filtered_words)
most_overall = counter.most_common(10) 
df = pd.DataFrame(most_overall, columns = ['Word', 'Count'])
df.plot.bar(x='Word',y='Count', title='Overall top words')
