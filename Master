

# This Python 3 environment comes with many helpful analytics libraries installed
# It is defined by the kaggle/python docker image: https://github.com/kaggle/docker-python
# For example, here's several helpful packages to load in 
​
import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
​
# Input data files are available in the "../input/" directory.
# For example, running this (by clicking run or pressing Shift+Enter) will list the files in the input directory
​
import os
print(os.listdir("../input"))
​
​
# Any results you write to the current directory are saved as output.

#played with gender submission file
gender_data = pd.read_csv('../input/gender_submission.csv')
gender_data.head()

#get info about the data
gender_data.info()

train_data = pd.read_csv('../input/train.csv')
#show first 5 rows
train_data.head()

#some sample queries that didn't work
#train_data['Name'].value_counts() - useless because unique
#train_data['Ticket'].value_counts() - highest # is 7

#value count to see how many there are of each (can check if important values are balanced or not)
train_data['Pclass'].value_counts()

train_data['Pclass'].describe()

train_data['Sex'].value_counts()

train_data['Sex'].describe()

t = train_data['Age'].value_counts()
#get the top 30 values by count
t.nlargest(30)

train_data['SibSp'].describe()

sib = train_data['SibSp'].value_counts()
​

train_data['Parch'].describe()

train_data['Parch'].value_counts()

train_data['Ticket'].describe()

ticket = train_data['Ticket'].value_counts()
ticket.nlargest(30)

train_data['Fare'].describe()

fare = train_data['Fare'].value_counts()
fare.nlargest(25)

train_data['Cabin'].describe()

cabin = train_data['Cabin'].value_counts()
cabin.nlargest(20)

train_data['Embarked'].value_counts()

train_data['Embarked'].describe()

train_data['Survived'].mean()   

 train_data = train_data.drop(['Cabin', 'Fare'], axis=1)
  # df = pd.DataFrame.drop(['Meter ID', 'abc'], axis=1)
​
    ## df.drop(df.columns[[22, 23, 24, 25, 
    #26, 27, 28, 29, 30, 31, 32 ,55]], axis=1, inplace=True)

train_data = train_data.drop(['Ticket'], axis=1)
​

train_data = train_data.drop(['PassengerId'], axis=1)

train_data = train_data.drop(['Embarked'], axis=1)

train_data = train_data.drop(['Name'], axis=1)

train_data[["Sex", "Survived"]].groupby(['Sex'], as_index=False).mean().sort_values(by='Survived', ascending=False)

​

train_data.dropna()

X_train = train_data.drop(['Survived'], axis=1)

#map male to 0
train_data.loc[train_data['Sex'] == 'male', 'Sex'] = 0
​

#map female to 1
train_data.loc[train_data['Sex'] == 'female', 'Sex'] = 1
​

train_data.head()

#set Y_train to the labels
Y_train = train_data["Survived"]

print(X_train)
​

print(Y_train)

#train_data = train_data.drop(['Survived'], axis =1)
#train_data = train_data.drop(['Survived'], axis=1)
​

train = pd.read_csv('../input/train.csv')
train.head()
